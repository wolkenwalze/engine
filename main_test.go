package main

import (
    "sort"
    "testing"
    "time"
)

func TestGraphRender(t *testing.T) {
    rawData := map[string]int{
        "2022-07-11T21:34:30.197274767Z": 2350127,
        "2022-07-11T21:34:31.199908296Z": 1175914,
        "2022-07-11T21:34:32.201135909Z": 926311,
        "2022-07-11T21:34:33.202107219Z": 1024312,
        "2022-07-11T21:34:34.20318128Z":  1134433,
        "2022-07-11T21:34:35.20441748Z":  1029730,
        "2022-07-11T21:34:36.205491629Z": 1123811,
        "2022-07-11T21:34:37.206671299Z": 1014910,
        "2022-07-11T21:34:38.208339174Z": 1130011,
        "2022-07-11T21:34:39.209507443Z": 10006999,
        "2022-07-11T21:34:40.219692702Z": 1108511,
        "2022-07-11T21:34:41.220844872Z": 1214212,
        "2022-07-11T21:34:42.222112378Z": 1175011,
        "2022-07-11T21:34:43.223662752Z": 1009310,
        "2022-07-11T21:34:44.224849122Z": 878709,
        "2022-07-11T21:34:45.226061793Z": 923909,
        "2022-07-11T21:34:46.227140662Z": 1132711,
        "2022-07-11T21:34:47.228511535Z": 1035610,
        "2022-07-11T21:34:48.230129509Z": 1205712,
        "2022-07-11T21:34:49.232263989Z": 1198011,
        "2022-07-11T21:34:50.233508616Z": 14232644,
        "2022-07-11T21:34:51.24872236Z":  1139312,
        "2022-07-11T21:34:52.250191266Z": 1217712,
        "2022-07-11T21:34:53.25151567Z":  1144611,
        "2022-07-11T21:34:54.252760073Z": 1074511,
        "2022-07-11T21:34:55.254008476Z": 1181112,
        "2022-07-11T21:34:56.25528998Z":  1089011,
        "2022-07-11T21:34:57.256432482Z": 1134711,
        "2022-07-11T21:34:58.257674544Z": 1156588,
        "2022-07-11T21:34:59.258964464Z": 1213288,
        "2022-07-11T21:35:00.260270344Z": 1217011,
        "2022-07-11T21:35:01.277726972Z": 0,
        "2022-07-11T21:35:02.278558056Z": 0,
        "2022-07-11T21:35:03.278674134Z": 1103410,
        "2022-07-11T21:35:04.279881821Z": 1134110,
        "2022-07-11T21:35:05.281137109Z": 971209,
        "2022-07-11T21:35:06.28216111Z":  1242002,
        "2022-07-11T21:35:07.284355454Z": 1096603,
        "2022-07-11T21:35:08.285497297Z": 1120703,
        "2022-07-11T21:35:09.286739146Z": 1164409,
        "2022-07-11T21:35:10.288054204Z": 1177809,
        "2022-07-11T21:35:11.289964566Z": 1122609,
        "2022-07-11T21:35:12.291193923Z": 1156110,
        "2022-07-11T21:35:13.293123886Z": 1059508,
        "2022-07-11T21:35:14.29429554Z":  1072806,
        "2022-07-11T21:35:15.296321633Z": 1053907,
        "2022-07-11T21:35:16.297478122Z": 1176407,
        "2022-07-11T21:35:17.299378915Z": 967205,
        "2022-07-11T21:35:18.300480103Z": 1031906,
        "2022-07-11T21:35:19.302159796Z": 1125108,
        "2022-07-11T21:35:20.304319455Z": 1073508,
        "2022-07-11T21:35:21.305499007Z": 1104508,
        "2022-07-11T21:35:22.306708919Z": 1090610,
        "2022-07-11T21:35:23.307842385Z": 23643021,
        "2022-07-11T21:35:24.332377669Z": 999910,
        "2022-07-11T21:35:25.333964539Z": 1109011,
        "2022-07-11T21:35:26.335191806Z": 1129211,
        "2022-07-11T21:35:27.336374272Z": 1131211,
        "2022-07-11T21:35:28.337611873Z": 1025308,
        "2022-07-11T21:35:29.338782908Z": 1146308,
        "2022-07-11T21:35:30.339973668Z": 1174709,
        "2022-07-11T21:35:31.341777937Z": 948908,
        "2022-07-11T21:35:32.3427719Z":   1098108,
        "2022-07-11T21:35:33.344033965Z": 943307,
        "2022-07-11T21:35:34.345097228Z": 1056508,
        "2022-07-11T21:35:35.346268292Z": 1089708,
        "2022-07-11T21:35:36.348246862Z": 1053008,
        "2022-07-11T21:35:37.350311133Z": 1067308,
        "2022-07-11T21:35:38.351433902Z": 970012,
        "2022-07-11T21:35:39.352616634Z": 1411217,
        "2022-07-11T21:35:40.354812079Z": 1656619,
        "2022-07-11T21:35:41.356509817Z": 1050012,
        "2022-07-11T21:35:42.35773575Z":  1539218,
        "2022-07-11T21:35:43.360258298Z": 974411,
        "2022-07-11T21:35:44.361327128Z": 1239910,
        "2022-07-11T21:35:45.362666896Z": 1270710,
        "2022-07-11T21:35:46.364820049Z": 1191110,
        "2022-07-11T21:35:47.366112966Z": 1242311,
        "2022-07-11T21:35:48.367651485Z": 1110210,
        "2022-07-11T21:35:49.369462507Z": 1034409,
        "2022-07-11T21:35:50.370606823Z": 1270711,
        "2022-07-11T21:35:51.372373144Z": 1200410,
        "2022-07-11T21:35:52.374368967Z": 1121410,
        "2022-07-11T21:35:53.37627889Z":  1014408,
        "2022-07-11T21:35:54.377401153Z": 1231215,
        "2022-07-11T21:35:55.378735697Z": 1284915,
        "2022-07-11T21:35:56.380120741Z": 1098513,
        "2022-07-11T21:35:57.381321283Z": 1225014,
        "2022-07-11T21:35:58.382644926Z": 1077313,
        "2022-07-11T21:35:59.384270944Z": 1127710,
        "2022-07-11T21:36:00.385505328Z": 1101709,
        "2022-07-11T21:36:01.386710711Z": 1244911,
        "2022-07-11T21:36:02.388014241Z": 1181810,
        "2022-07-11T21:36:03.389310829Z": 1241611,
        "2022-07-11T21:36:04.390652318Z": 1222310,
        "2022-07-11T21:36:05.391983106Z": 1199810,
        "2022-07-11T21:36:06.393508096Z": 14088318,
        "2022-07-11T21:36:07.408370998Z": 1048709,
        "2022-07-11T21:36:08.409775087Z": 992808,
        "2022-07-11T21:36:09.411841182Z": 1107709,
        "2022-07-11T21:36:10.413864455Z": 1122910,
        "2022-07-11T21:36:11.415247251Z": 976008,
        "2022-07-11T21:36:12.417145351Z": 1161310,
        "2022-07-11T21:36:13.418607847Z": 1187311,
        "2022-07-11T21:36:14.420084244Z": 1054709,
        "2022-07-11T21:36:15.421778142Z": 1007709,
        "2022-07-11T21:36:16.423228339Z": 965808,
        "2022-07-11T21:36:17.424533434Z": 1345412,
        "2022-07-11T21:36:18.426353838Z": 1071510,
        "2022-07-11T21:36:19.428030128Z": 1157911,
        "2022-07-11T21:36:20.429584916Z": 1033910,
        "2022-07-11T21:36:21.4306951Z":   2001320,
        "2022-07-11T21:36:22.433578701Z": 1253413,
        "2022-07-11T21:36:23.435240191Z": 1160611,
        "2022-07-11T21:36:24.437065182Z": 1288612,
        "2022-07-11T21:36:25.439050874Z": 1190412,
        "2022-07-11T21:36:26.440692448Z": 1072910,
        "2022-07-11T21:36:27.442553759Z": 1120110,
        "2022-07-11T21:36:28.444724973Z": 1097110,
        "2022-07-11T21:36:29.446346682Z": 1249511,
    }

    var times []time.Time
    var data = map[time.Time]int{}
    maxLatency := 0
    for t, l := range rawData {
        tm, err := time.Parse(time.RFC3339, t)
        if err != nil {
            panic(err)
        }
        times = append(times, tm)
        data[tm] = l
        if l > maxLatency {
            maxLatency = l
        }
    }

    sort.SliceStable(times, func(i, j int) bool {
        return times[i].Before(times[j])
    })

    prettyPrintLatencyGraph(times[:70], maxLatency, data)
}
